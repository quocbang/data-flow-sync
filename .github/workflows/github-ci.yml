name: ci

on:  
  pull_request:
  release:
    types: [published]

env:
  RELEASES_TAG: ${{ github.event.release.tag_name }}
      
jobs:
        
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20

    - name: Login to DockerHub Registry      
      run: |               
            echo "releases env: ${{ env.RELEASES_TAG }}"         
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
     
    - name: build test
      if: env.RELEASES_TAG == null
      run: |
              echo "Start test build back end..."
              cd server/
              docker build -t bangquoc9/data-flow-sync-be:testbuilder --build-arg SMTP_SERVER_TEST=${{ secrets.SMTP_SERVER }} --build-arg SMTP_PORT_TEST=${{ secrets.SMTP_PORT }} --build-arg SMTP_SENDER_TEST=${{ secrets.SMTP_SENDER }} --build-arg SMTP_PASSWORD_TEST=${{ secrets.SMTP_PASSWORD }} .
              echo "Build test completed"
    - name: build back end production
      if: env.RELEASES_TAG != null
      run: |
              echo "Start production build..."
              cd server/
              docker build -t bangquoc9/data-flow-sync-be:${{ env.RELEASES_TAG }} --build-arg SMTP_SERVER_TEST=${{ secrets.SMTP_SERVER }} --build-arg SMTP_PORT_TEST=${{ secrets.SMTP_PORT }} --build-arg SMTP_SENDER_TEST=${{ secrets.SMTP_SENDER }} --build-arg SMTP_PASSWORD_TEST=${{ secrets.SMTP_PASSWORD }} .
              docker push bangquoc9/data-flow-sync-be:${{ env.RELEASES_TAG }}
              echo "Build back end production completed" 
    - name: build front end production
      if: env.RELEASES_TAG != null
      run: |
              echo "Start production build..."
              cd ui/
              docker build -t bangquoc9/data-flow-sync-fe:${{ env.RELEASES_TAG }} .
              docker push bangquoc9/data-flow-sync-fe:${{ env.RELEASES_TAG }}
              echo "Build front end production completed" 