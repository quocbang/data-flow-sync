// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/quocbang/data-flow-sync/server/swagger/models"
)

// VerifyAccountOKCode is the HTTP code returned for type VerifyAccountOK
const VerifyAccountOKCode int = 200

/*VerifyAccountOK OK

swagger:response verifyAccountOK
*/
type VerifyAccountOK struct {

	/*
	  In: Body
	*/
	Payload *models.Token `json:"body,omitempty"`
}

// NewVerifyAccountOK creates VerifyAccountOK with default headers values
func NewVerifyAccountOK() *VerifyAccountOK {

	return &VerifyAccountOK{}
}

// WithPayload adds the payload to the verify account o k response
func (o *VerifyAccountOK) WithPayload(payload *models.Token) *VerifyAccountOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the verify account o k response
func (o *VerifyAccountOK) SetPayload(payload *models.Token) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VerifyAccountOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// VerifyAccountBadRequestCode is the HTTP code returned for type VerifyAccountBadRequest
const VerifyAccountBadRequestCode int = 400

/*VerifyAccountBadRequest Bad Request

swagger:response verifyAccountBadRequest
*/
type VerifyAccountBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewVerifyAccountBadRequest creates VerifyAccountBadRequest with default headers values
func NewVerifyAccountBadRequest() *VerifyAccountBadRequest {

	return &VerifyAccountBadRequest{}
}

// WithPayload adds the payload to the verify account bad request response
func (o *VerifyAccountBadRequest) WithPayload(payload *models.ErrorResponse) *VerifyAccountBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the verify account bad request response
func (o *VerifyAccountBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VerifyAccountBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// VerifyAccountInternalServerErrorCode is the HTTP code returned for type VerifyAccountInternalServerError
const VerifyAccountInternalServerErrorCode int = 500

/*VerifyAccountInternalServerError Internal Error

swagger:response verifyAccountInternalServerError
*/
type VerifyAccountInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewVerifyAccountInternalServerError creates VerifyAccountInternalServerError with default headers values
func NewVerifyAccountInternalServerError() *VerifyAccountInternalServerError {

	return &VerifyAccountInternalServerError{}
}

// WithPayload adds the payload to the verify account internal server error response
func (o *VerifyAccountInternalServerError) WithPayload(payload *models.ErrorResponse) *VerifyAccountInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the verify account internal server error response
func (o *VerifyAccountInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VerifyAccountInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*VerifyAccountDefault Unexpected error

swagger:response verifyAccountDefault
*/
type VerifyAccountDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewVerifyAccountDefault creates VerifyAccountDefault with default headers values
func NewVerifyAccountDefault(code int) *VerifyAccountDefault {
	if code <= 0 {
		code = 500
	}

	return &VerifyAccountDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the verify account default response
func (o *VerifyAccountDefault) WithStatusCode(code int) *VerifyAccountDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the verify account default response
func (o *VerifyAccountDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the verify account default response
func (o *VerifyAccountDefault) WithPayload(payload *models.ErrorResponse) *VerifyAccountDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the verify account default response
func (o *VerifyAccountDefault) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VerifyAccountDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
